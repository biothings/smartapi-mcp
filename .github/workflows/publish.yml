name: Publish Python Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: "Publish to Test PyPI instead of PyPI"
        required: false
        default: false
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Lint check with Ruff
        run: |
          # stop the build if there are linting errors
          ruff check . --statistics

      - name: Format check with Ruff
        run: |
          ruff format --check .

      - name: Test with pytest
        run: |
          pytest --cov=smartapi_mcp --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.13'
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch')
    environment:
      name: ${{ github.event.inputs.test_pypi == 'true' && 'testpypi' || 'pypi' }}
      url: ${{ github.event.inputs.test_pypi == 'true' && 'https://test.pypi.org/p/smartapi-mcp' || 'https://pypi.org/p/smartapi-mcp' }}
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist/

      - name: Publish to Test PyPI
        if: github.event.inputs.test_pypi == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

      - name: Publish to PyPI
        if: github.event.inputs.test_pypi != 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
